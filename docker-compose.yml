name: finance-app

services:
  proxy:
    build: proxy
    image: proxy-finance:1.0.1
    ports:
      - 80:80
    networks:
      - finance-network

  user-service:
    build: user-service
    image: user-service:1.0.1
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - finance-db
    networks:
      - finance-network

  classifier-service:
    build: classifier-service
    image: classifier-service:1.0.1
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - finance-db
    networks:
      - finance-network

  audit-service:
    build: audit-service
    image: audit-service:1.0.1
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - finance-db
    networks:
      - finance-network

  account-service:
    build: account-service
    image: account-service:1.0.1
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - finance-db
    networks:
      - finance-network

  scheduler-service:
    build: scheduler-service
    image: scheduler-service:1.0.1
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - finance-db
    networks:
      - finance-network

  admin-server:
    build: ./admin-server
    image: admin-server:1.0.1
    networks:
      - finance-network
    ports:
      - "8888:8080"
    environment:
      SERVER_PASSWORD: ${SERVER_PASS}

  finance-db:
    build: postgresql
    image: postgresql-finance:1.0.1
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    networks:
      - finance-network
    volumes:
      - db-data:/var/lib/postgresql/data
    secrets:
      - postgres_password

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@finance.com
      PGADMIN_DEFAULT_PASSWORD: finance
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
      - ./docker/pgadmin/pgpass:/pgadmin4/pgpass
    depends_on:
      - finance-db
    entrypoint: /bin/sh -c "chmod 600 /pgadmin4/pgpass; /entrypoint.sh;"
    ports:
      - 82:80
    networks:
      - finance-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - user-service
#    ports:
#      - "9090:9090"
    networks:
      - finance-network

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - finance-network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    command: '--no-collector.stat_bgwriter'
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:${DB_PASS}@finance-db:5432?sslmode=disable"
    networks:
      - finance-network
    depends_on:
      - finance-db

networks:
  finance-network:

volumes:
  grafana-data:
  db-data:
  pgadmin_data:

secrets:
  postgres_password:
    file: ./secrets.txt